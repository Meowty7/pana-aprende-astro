---

import { getCollection } from 'astro:content';
import MainLayout from '../../layouts/MainLayout.astro';
import SelectedNumber from '../../components/SelectedNumber';
import ClientOnlyComponent from '../../components/ClientComponent';

export async function getStaticPaths() {
    const blogsEntries = await getCollection('categorias');
    return blogsEntries.map((categorias) => ({
        params: { level: categorias.data.level },
        props: { categorias },
    }));
}


const { categorias } = Astro.props;
const questions = categorias?.data?.questions

let numberofquestions = questions.length
const options = Array.from({ length: numberofquestions }, (_, i) => i +1);

export const prerender = true

let userId = '';

console.log(userId)

---

<MainLayout>

    <div class="flex flex-col justify-center items-center ">
        <div class="p-4 mb-4 w-[500px] break-words bg-white rounded-lg shadow-sm border-gray-200">
            <p class="text-gray-700" id="user-id">Loading...</p>
        </div>
       
       <SelectedNumber userId={"ocybldn85ddsi4w"} option={options} questions={questions} client:only="react" />
       
        <div class="p-4 mb-4 w-[500px] break-words bg-white rounded-lg shadow-sm border-gray-200">
            
            {questions.map((item: { question: unknown; }, index: any) => (
                <h3 class="text-lg text-black font-medium">Pregunta {index+1}:</h3>
                <p class= "text-gray-700">{item.question}</p>
                
            ))}
        </div>
        
    </div>
</MainLayout>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const query = new URLSearchParams(window.location.search);
        const userId = query.get('userId') || 'No User ID Found';
        let uid = document.getElementById('user-id') as HTMLParagraphElement
        uid.textContent = `UserID: ${userId}`;
        // Optionally, update state or trigger re-render here if needed
    });
</script>